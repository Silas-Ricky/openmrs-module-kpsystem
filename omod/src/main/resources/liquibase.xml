<?xml version="1.0" encoding="UTF-8"?>
<!--

    This Source Code Form is subject to the terms of the Mozilla Public License,
    v. 2.0. If a copy of the MPL was not distributed with this file, You can
    obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under
    the terms of the Healthcare Disclaimer located at http://openmrs.org/license.

    Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS
    graphic logo is a trademark of OpenMRS Inc.

-->
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog/1.9"
				   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
				   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog/1.9 http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-1.9.xsd">



	<changeSet id="${project.parent.artifactId}-20130319-0911" author="rowanseymour">
		<preConditions onFail="MARK_RAN" onError="WARN">
			<sqlCheck expectedResult="0">SELECT COUNT(*) FROM encounter_type WHERE uuid = 'ed6dacc9-0827-4c82-86be-53c0d8c449be';</sqlCheck>
		</preConditions>
		<comment>
			Creates the TB Screening encounter type if it doesn't exist
		</comment>
		<sql>
			INSERT INTO encounter_type (`name`, `description`, `creator`, `date_created`, `retired`, `uuid`)
				VALUES ('TB Screening', 'Screening of patient for TB', '1', '2013-03-06 10:04:31', '0', 'ed6dacc9-0827-4c82-86be-53c0d8c449be');
		</sql>
	</changeSet>

	<changeSet id="${project.parent.artifactId}-20130319-0912" author="rowanseymour">
		<comment>
			Updates the encounter type of all TB Screening form submissions
		</comment>
		<sql>
			SELECT encounter_type_id INTO @SCREENING_ENC_TYPE_ID FROM encounter_type WHERE uuid = 'ed6dacc9-0827-4c82-86be-53c0d8c449be';
			SELECT form_id INTO @SCREENING_FORM_ID FROM form WHERE uuid = '59ed8e62-7f1f-40ae-a2e3-eabe350277ce';

			UPDATE encounter e SET e.encounter_type = @SCREENING_ENC_TYPE_ID WHERE e.form_id = @SCREENING_FORM_ID;
		</sql>
	</changeSet>

	<changeSet id="${project.parent.artifactId}-20130828-1013" author="rowanseymour">
		<comment>
			Retires the National ID person attribute type which became an identifier
		</comment>
		<sql>
			UPDATE person_attribute_type
			SET retired = 1, retired_by = 1, date_retired = NOW(), retire_reason = 'Became patient identifier'
			WHERE uuid = '73d34479-2f9e-4de3-a5e6-1f79a17459bb';
		</sql>
	</changeSet>

	<changeSet id="${project.parent.artifactId}-20140312-1133" author="rowanseymour">
		<comment>
			Demotes superfluous super-users now that we've fixed permissions for patient merging etc
		</comment>
		<sql>
			DELETE FROM user_role WHERE role = 'System Developer' AND user_id != 1;
		</sql>
	</changeSet>

	<changeSet id="${project.parent.artifactId}-20140317-1123" author="rowanseymour">
		<preConditions onFail="MARK_RAN" onError="WARN">
			<sqlCheck expectedResult="0">SELECT COUNT(*) FROM role WHERE role = 'Clinician';</sqlCheck>
		</preConditions>
		<comment>
			Replaces uses of 'Provider' or 'Provider App' role with 'Clinician'. 'Provider' role is kept as it is still
			marked as "core" metadata. 'Provider App' is deleted if it exists.
		</comment>
		<sql>
			INSERT INTO role VALUES('Clinician', 'Can access all apps except admin, and provide encounters', '57d56d58-54f7-4539-b558-b0cfab5f03ea');

			INSERT INTO user_role SELECT u.user_id, 'Clinician' FROM (
				SELECT DISTINCT ur.user_id FROM user_role ur WHERE ur.role = 'Provider' OR ur.role = 'Provider App'
			) u;

			DELETE FROM user_role WHERE role = 'Provider' OR role = 'Provider App';
			DELETE FROM role_role WHERE child_role = 'Provider' OR child_role = 'Provider App';
			DELETE FROM role_privilege WHERE role = 'Provider' OR role = 'Provider App';
			DELETE FROM role WHERE role = 'Provider App';
		</sql>
	</changeSet>



	<changeSet id="${project.parent.artifactId}-20170918-0956" author="aojwang">
		<comment>
			updates all provider ids to match their system ids. this is a requirement for muzima core module
		</comment>
		<sql>
			update provider p
			inner join users u on p.person_id=u.person_id
			set p.identifier = u.system_id;
		</sql>
	</changeSet>



	<changeSet id="20190129-1855-insert-peer-educator-encounter-role" author="aojwang">
		<preConditions onFail="MARK_RAN">
			<sqlCheck expectedResult="0">
				select count(*) from encounter_role where uuid = 'ca3cb266-23db-11e9-ab14-d663bd873d93'
			</sqlCheck>
		</preConditions>
		<comment>Inserting the peer educator encounter role</comment>
		<insert tableName="encounter_role">
			<column name="name" value="Peer Educator"/>
			<column name="description" value="A role for peer educators"/>
			<column name="creator" valueNumeric="1"/>
			<column name="date_created" valueDate="2019-01-29T14:00:00.0" />
			<column name="retired" valueBoolean="false" />
			<column name="uuid" value="ca3cb266-23db-11e9-ab14-d663bd873d93" />
		</insert>
		<!-- Update postgres sequence correctly as it is incorrect after initial bulk inserts -->
		<modifySql dbms="postgresql">
			<prepend value="SELECT setval('encounter_role_encounter_role_id_seq', (SELECT MAX(encounter_role_id) FROM encounter_role)+1);"/>
		</modifySql>
	</changeSet>
	<changeSet id="${update_addressTemplate}-20191114" author="Bernard">
		<comment>
			Update Address template
		</comment>
		<sqlFile path="AddressTemplate.sql" />

	</changeSet>
	<changeSet id="${Add_Address_Hierarchies}-20191113" author="Bernard">
		<comment>
			Add address hierarchy
		</comment>
		<sqlFile path="address_hierarchy_entry.sql" />
		<sqlFile path="address_hierarchy_address_to_entry_map.sql"  />
		<sqlFile path="address_hierarchy_level.sql"  />
	</changeSet>


</databaseChangeLog>